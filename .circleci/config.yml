# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  test_min_node_version:
    docker:
      - image: circleci/node:16
      # https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn install --ignore-engines
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests against our npm build (on minimum node version)
      - run: yarn build && yarn test-dist

  test_latest_coverage:
    docker:
      - image: circleci/node:latest
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn install --ignore-engines
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run coveralls first in case tests fail (and against 'src')
      - run: yarn coveralls

      # run tests against our npm build (on this node version too)
      - run: yarn build && yarn test-dist


  publish:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run: yarn install --ignore-engines
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: yarn build

      # if test passed, try release, but end true for no release needed
      - run: npm run semantic-release

workflows:
  version: 2
  default:
    jobs:
      - test_min_node_version
      - test_latest_coverage
      - publish:
          requires:
            - test_min_node_version
            - test_latest_coverage
